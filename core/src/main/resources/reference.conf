# Reference configuration for the DataStax Java driver for Apache CassandraÂ®.
#
# Unless you use a custom mechanism to load your configuration (see DriverContext), all the values
# declared here will be used as defaults if you don't override them in your own `application.conf`.
#
# This file is in HOCON format, see https://github.com/typesafehub/config/blob/master/HOCON.md.
datastax-java-driver {
  protocol {
    # The native protocol version to use.
    #
    # This option is not required. If it is absent, the driver will negotiate it with the *first*
    # node it tries to connect to. More precisely, it will try with the highest supported version,
    # and if not supported fallback to the second highest and so on.
    # Once the version is set, it will be used for the lifetime of the driver instance.
    # Auto detection can be problematic with mixed-version clusters: if the driver connects first
    # to one of the higher-version nodes, it will negotiate a version that might not work when
    # connecting to lower-version nodes later. You should force the lowest common protocol version
    # in that case.
    // version = V4
  }
  connection {
    # The timeout to use for internal queries that run as part of the initialization process, just
    # after we open a connection. If this timeout fires, the initialization of the connection will
    # fail. If this is the first connection ever, the driver will fail to initialize as well,
    # otherwise it will retry the connection later.
    init-query-timeout = 5 seconds

    # The timeout to use when the driver changes the keyspace on a connection at runtime (this
    # happens when the client issues a `USE ...` query, and all connections belonging to the
    # current session need to be updated).
    set-keyspace-timeout = ${datastax-java-driver.connection.init-query-timeout}

    # The maximum number of requests that can be executed concurrently on a connection.
    # This must be between 1 and 32768.
    max-requests-per-connection = 32768

    heartbeat {
      # The heartbeat interval. If a connection stays idle for that duration (no reads), the driver
      # sends a dummy message on it to make sure it's still alive. If not, the connection is
      # trashed and replaced.
      interval = 30 seconds
      # How long the driver waits for the response to a heartbeat. If this timeout fires, the
      # heartbeat is considered failed.
      timeout = ${datastax-java-driver.connection.init-query-timeout}
    }
    # The maximum length of the frames supported by the driver. Beyond that limit, requests will
    # fail with an exception
    max-frame-length = 256 MB
  }
  authentication {
    # The auth provider class to use. The driver expects this class to have a public constructor
    # that takes a DriverConfigProfile argument. It will invoke it with the default configuration
    # profile.
    // provider-class = com.datastax.driver.api.core.auth.PlainTextAuthProvider
    # The configuration of the auth provider. This is specific to each implementation, and will
    # therefore depend on the provider-class configured above.
    // config {
    //   username = cassandra
    //   password = cassandra
    // }
  }
}